<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6uTlhOzOwwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6uTlhOzOwwAAAABJRU5ErkJggg==
</value>
  </data>
</root>